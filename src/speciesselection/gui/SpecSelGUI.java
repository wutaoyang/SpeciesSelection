/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package speciesselection.gui;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.io.File;
import java.nio.file.Paths;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import speciesselection.SpeciesSelection;

/**
 *
 * @author mre16utu
 */
public class SpecSelGUI extends javax.swing.JFrame {

    // variable to get result of file open/save dialog
    private int fileChooserResult;
    private String workingDir;

    /**
     * Creates new form SpecSelGUI
     */
    public SpecSelGUI() {
        initComponents();
        workingDir = System.getProperty("user.dir");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldDataFilePath = new javax.swing.JTextField();
        jButtonProcess = new javax.swing.JButton();
        jButtonSelectDataFile = new javax.swing.JButton();
        jPanelMain = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Species Selection ");

        jButtonProcess.setText("Process");
        jButtonProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProcessActionPerformed(evt);
            }
        });

        jButtonSelectDataFile.setText("Select Data File");
        jButtonSelectDataFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectDataFileActionPerformed(evt);
            }
        });

        jPanelMain.setPreferredSize(new java.awt.Dimension(600, 400));
        jPanelMain.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jPanelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 71, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonSelectDataFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDataFilePath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonProcess)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDataFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSelectDataFile)
                    .addComponent(jButtonProcess))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProcessActionPerformed
        try {
            String fileName = jTextFieldDataFilePath.getText();
            if (!fileName.equals("")) {
                String[] args = {fileName};
                //run solution and draw graph
                drawGraph(SpeciesSelection.specSel(args));
            } else {
                System.out.println("No file selected");
            }
        } catch (Exception e) {
            System.out.println("Error Processing Data: " + e);
        }
    }//GEN-LAST:event_jButtonProcessActionPerformed

    private void drawGraph(ArrayList<Double> meanSensitivities) {
        // Draw the graph to GUI
        JPanel panel = jPanelMain;
        Dimension dim = new Dimension(600, 400);
        GraphPanel graph = new GraphPanel(meanSensitivities);
        graph.setPreferredSize(dim);
        panel.add(graph, BorderLayout.CENTER);
        pack();
        panel.setVisible(true);
    }

    private void jButtonSelectDataFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectDataFileActionPerformed
        try {
            System.out.println("Loading albums");

            // prompt user to select text file containing album data
            String filename = getTextFilePath("LOAD");
            // proceed if file selected (not cancelled)
            if (fileChooserResult == JFileChooser.APPROVE_OPTION) {
                jTextFieldDataFilePath.setText(filename);
            }
        } catch (Exception e) {
            System.out.println("Error Loading");
        }
    }//GEN-LAST:event_jButtonSelectDataFileActionPerformed

    // launches JChooser and returns path of file selected for load or save
    private String getTextFilePath(String option) {
        // use JFileChooser to select album text file
        try {
            String filePath;
            // launch file chooser in current working directory
            JFileChooser fileChooser = new JFileChooser(workingDir);
            FileFilter filter = new FileNameExtensionFilter("Text File", "txt");
            fileChooser.setFileFilter(filter);

            // initiate load or save dialog according to option parameter
            Component c1 = null;
            if (option.equals("LOAD")) {
                fileChooserResult = fileChooser.showOpenDialog(c1);
            }

            // get users selected file and directory location
            File file = fileChooser.getSelectedFile();
            if (file != null) {
                filePath = file.getAbsolutePath();
                workingDir = file.getParentFile().getAbsolutePath();
                return getFilenameFromPath(filePath);
            }
        } catch (Exception e) {
            System.err.println("Error in getTextFilePath(): " + e);
        }
        return null;
    }

    // Method to exact filename and extension from absolutepath as string
    private String getFilenameFromPath(String filePath) {
        return Paths.get(filePath).getFileName().toString();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpecSelGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpecSelGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpecSelGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpecSelGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SpecSelGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonProcess;
    private javax.swing.JButton jButtonSelectDataFile;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JTextField jTextFieldDataFilePath;
    // End of variables declaration//GEN-END:variables
}
